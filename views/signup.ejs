<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="stylesheet" href="/css/styles.css" />
    <title>Sign Up</title>
    <style>
      @import url('https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;600&display=swap');
      * {
        font-family: 'Poppins', sans-serif;
      }
      body {
        display: flex;
        justify-content: center;
        align-items: center;
        height: 100vh;
        margin: 0;
        background: url('/img/back.jpg') no-repeat center center fixed;
        background-size: cover;
        backdrop-filter: blur(10px);

        font-family: 'Poppins', sans-serif;
      }

      .signup-container {
        background: rgba(255, 255, 255, 0.1);
        border-radius: 16px;
        padding: 2rem;
        width: 320px;
        box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3);
        backdrop-filter: blur(10px);
        border: 1px solid rgba(255, 255, 255, 0.2);
        color: #fff;
      }

      .signup-container h2 {
        margin-bottom: 1.5rem;
        text-align: center;
      }

      .signup-container input {
        width: 92%;
        padding: 0.8rem;
        margin: 0.5rem 0;
        border: none;
        border-radius: 8px;
        background: rgba(255, 255, 255, 0.2);
        color: #fff;
        outline: none;
      }

      .signup-container input::placeholder {
        color: rgba(255, 255, 255, 0.6);
      }

      .signup-container button {
        width: 40%;
        padding: 0.8rem;
        background: linear-gradient(135deg, #360186, #0056b3);
        color: #fff;
        border: none;
        border-radius: 6px;
        font-size: 1rem;
        cursor: pointer;
        transition: transform 0.2s ease, box-shadow 0.2s ease;
        margin-top: 1rem;
      }

      .signup-container button:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 10px rgba(0, 123, 255, 0.5);
      }

      .signup-container .message {
        margin-bottom: 1rem;
        text-align: center;
        display: none;
      }

      .signup-container .message.error {
        color: #e74c3c;
      }

      .signup-container .message.success {
        color: #2ecc71;
      }

      .signup-container a {
        display: block;
        text-align: center;
        margin-top: 1rem;
        color: #007bff;
        text-decoration: none;
      }

      .signup-container a:hover {
        text-decoration: underline;
      }
      .flxStart {
        display: flex;
        justify-content: space-between;
        align-items: center;
        width: 100%;
      }
    </style>
  </head>
  <body>
    <div class="signup-container">
      <h2>Sign Up</h2>
      <div class="message" id="message"></div>
      <form id="signup-form">
        <input type="text" name="username" placeholder="Username" required />
        <input type="email" name="email" placeholder="Email" required />
        <input
          type="password"
          name="password"
          placeholder="Password"
          required
        />
        <input
          type="password"
          name="confirmPassword"
          placeholder="Confirm Password"
          required
        />
        <div class="flxStart">
          <button type="submit">Sign Up</button>
          <a href="/login">Login?</a>
        </div>
      </form>
    </div>

    <script>
      const form = document.getElementById('signup-form');
      const messageDiv = document.getElementById('message');

      form.addEventListener('submit', function (event) {
        event.preventDefault(); // Prevent traditional form submission

        // Collect form data
        const formData = new FormData(form);
        const username = formData.get('username')?.trim();
        const email = formData.get('email')?.trim();
        const password = formData.get('password');
        const confirmPassword = formData.get('confirmPassword');

        // Check if fields are empty
        if (!username || !email || !password || !confirmPassword) {
          showMessage('Please fill in all fields.', 'error');
          return;
        }

        // Log the data to check before sending
        console.log({ username, email, password, confirmPassword });

        // Send AJAX request
        fetch('/api/users/signup', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({ username, email, password, confirmPassword }),
        })
          .then((response) => response.json())
          .then((data) => {
            messageDiv.classList.remove('error', 'success');
            messageDiv.style.display = 'block';

            if (data.success) {
              showMessage(data.message, 'success');

              // Redirect to dashboard after 3 seconds
              setTimeout(() => {
                window.location.href = '/dashboard';
              }, 3000);
            } else {
              showMessage(data.message || 'An error occurred.', 'error');
            }
          })
          .catch((error) => {
            console.error('Network error:', error);
            showMessage('Network error. Please try again later.', 'error');
          });
      });

      // Helper function to show messages
      function showMessage(msg, type) {
        messageDiv.textContent = msg;
        messageDiv.className = `message ${type}`;
        messageDiv.style.display = 'block';
      }
    </script>
  </body>
</html>
