<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Chat App</title>
    <link rel="stylesheet" href="./css/style.css" />
    <link
      href="https://unpkg.com/boxicons@2.1.4/css/boxicons.min.css"
      rel="stylesheet"
    />
  </head>
  <body>
    <div class="chatSearch" style="display: none">
      <input type="text" id="searchInput" placeholder="Search for a user..." />
      <button id="searchButton">Search</button>
      <div class="searchResults"></div>
    </div>
    <div class="container">
      <button class="sidebar-toggle" onclick="toggleSidebar()">â˜°</button>

      <div class="sidebar">
        <div class="sideways">
          <input
            type="text"
            class="search-bar"
            placeholder="enter username here...."
          />
          <div class="searchUser">
            <i
              class="bx bxs-user-plus"
              style="color: #ffffff; font-size: x-large"
            ></i>
          </div>
        </div>
        <div class="user-list"></div>

        <div
          class="loading"
          style="display: none; text-align: center; padding: 10px"
        >
          <p style="color: white">Loading...</p>
        </div>
      </div>
      <div class="convo">
        <div class="chat-header" style="display: none"></div>
        <div class="messages">
          <div class="placeHolder">
            <h1>select a user to chat with!</h1>
            <img src="/img/planet.png" alt="" />
          </div>
        </div>
      </div>
      <div class="pushNotifications"></div>
    </div>
    <div
      id="voiceCallContainer"
      class="voice-call-container"
      style="display: none"
    >
      <audio id="remoteAudio" autoplay></audio>
    </div>

    <div id="videosContainer" class="videos-container">
      <div class="videos">
        <video id="localVideo" class="video local-video" autoplay muted></video>
      </div>
      <div class="wrapper">
        <div class="video-controls">
          <div id="endVideoCall" class="control-btn">
            <i class="bx bxs-phone-call" style="color: red"></i>
          </div>
          <div id="muteVIdeoCall" class="control-btn">
            <i class="bx bxs-microphone-off"></i>
          </div>
          <div id="switchToVoice" class="control-btn">
            <i class="bx bxs-camera-off"></i>
          </div>

          <div id="shareScreen" class="control-btn">
            <i class="bx bx-desktop"></i>
          </div>
        </div>
      </div>
    </div>
    <div
      id="recordingIndicator"
      class="recording-indicator"
      style="display: none"
    >
      ðŸŽ¤ Recording... <span id="recordingTimer">00:00</span>
    </div>

    <script src="/js/node-rsa-browser.js"></script>

    <script src="https://cdn.jsdelivr.net/npm/crypto-js@4.1.1/crypto-js.js"></script>
    <script src="/socket.io/socket.io.js"></script>

    <script src="/js/voiceNotesAndMedia.js"></script>
    <script src="/js/dashboard.js"></script>

    <script src="/js/voiceAndVideoCalls.js"></script>
    <script>
      document
        .querySelector('.searchUser')
        .addEventListener('click', async () => {
          const query = document.querySelector('.search-bar').value.trim();
          if (!query) return;

          console.log('Searching for users:', query);
          try {
            const response = await fetch(
              `/api/users/search-users?query=${encodeURIComponent(query)}`,
            );

            const data = await response.json();
            console.log('Search Results:', data);

            if (!data.user) {
              return showToast('No user exists with this username!', false);
            } else {
              await createUserDiv(data.convo, true);
            }
          } catch (error) {
            console.error('Error searching users:', error);
          }
        });

      function showToast(message, error = false) {
        const toast = document.createElement('div');
        toast.classList.add('toast');
        toast.textContent = message;
        toast.style.position = 'fixed';
        toast.style.bottom = '10px';
        toast.style.left = '50%';
        toast.style.transform = 'translateX(-50%)';
        toast.style.padding = '10px 20px';
        toast.style.borderRadius = '5px';
        toast.style.color = 'white';

        toast.style.zIndex = '1000';
        if (error) {
          toast.style.backgroundColor = 'green';
        } else {
          toast.style.backgroundColor = 'red';
        }
        document.body.appendChild(toast);

        setTimeout(() => {
          toast.remove();
        }, 3000);
      }
    </script>
  </body>
</html>
